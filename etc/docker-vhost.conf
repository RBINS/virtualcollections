{{ $dciphers := "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4" }}
{{ $v := dict "$" $ }}
{{ $v := merge $v ( dict "Env"                           .Env) }}
{{ $v := merge $v ( dict "certspath"                   ( .Env.SSL_CERTS_PATH | default "/certs" )                                     ) }}
{{ $v := merge $v ( dict "cert"                        ( .Env.SSL_CERT_PATH | default ( print $v.certspath  "/cert.crt" ))            ) }}
{{ $v := merge $v ( dict "key"                         ( .Env.SSL_KEY_PATH  | default ( print $v.certspath  "/cert.key" ))            ) }}
{{ $v := merge $v ( dict "diffie"                      ( .Env.NGINX_DH_FILE | default ( print $v.certspath  "/dhparams.pem" ))        ) }}
{{ $v := merge $v ( dict "nossl"                       ( .Env.NO_SSL | default "" )                                                  ) }}
{{ if not ( .Env.NO_FORCE_SSL | empty ) }}
{{ $v := merge $v ( dict "noforcessl" .Env.NO_FORCE_SSL ) }}
{{ else }}
{{ $v := merge $v ( dict "noforcessl" ((eq $v.nossl "1") | ternary "0" "1" )) }}
{{ end }}
{{ $v := merge $v ( dict "nostatics"                   ( .Env.NO_STATICS | default "" )                                               ) }}
{{ $v := merge $v ( dict "loglevel"                    ( .Env.NGINX_LOGLEVEL | default "crit" )                                       ) }}
{{ $v := merge $v ( dict "real_ip_from_recursive"      ( .Env.NGINX_REAL_IP_FROM_RECURSIVE | default "on" )                           ) }}
{{ $v := merge $v ( dict "real_ip_from"                ( .Env.NGINX_REAL_IP_FROM | default "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 193.190.234.0/24" )) }}
{{ $v := merge $v ( dict "ssl_ciphers"                 ( .Env.NGINX_SSL_CIPHERS | default $dciphers )                                 ) }}
{{ $v := merge $v ( dict "ssl_protocols"               ( .Env.NGINX_SSL_PROTOCOLS | default "TLSv1 TLSv1.1 TLSv1.2" )                 ) }}
{{ $v := merge $v ( dict "client_max_body_size"        ( .Env.NGINX_BODY_SIZE | default "1000G" )                                     ) }}
{{ $v := merge $v ( dict "zope_address"                ( .Env.RBINS_ZOPE_ADDRESS | default "host.docker.internal" )                   ) }}
{{ $v := merge $v ( dict "vhostblock"                  ( list "commonproxypass" )                                                     ) }}

proxy_connect_timeout       600;
proxy_send_timeout          600;
proxy_read_timeout          600;
send_timeout                600;

map $http_origin $allow_origin {
  default "";
  "~^(?:(?:https?://(?:(?:(?:(?:www|canathist)\.)?naturalheritage\.be)|(?:(?:biblio|library|mars|nagoya|new-mars|virtual-?collections|collections|staging-collections|staging-mars|digit|ltp|cetaf)\.naturalsciences\.be))))" "$http_origin";
}
map $request_method $cors_method {
  default "allowed";
  "OPTIONS" "preflight";
}
map $cors_method $cors_max_age {
  default "";
  "preflight" 1728000;
}
map $cors_method $cors_allow_methods {
  default "";
  "preflight" "GET, POST, OPTIONS, PATCH, PUT, DELETE";
}
map $cors_method $cors_allow_headers {
  default "";
  "preflight" "Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since";
}
{{ define "cors" }}
add_header Access-Control-Allow-Origin $allow_origin;
add_header Access-Control-Allow-Credentialsert 'true';
add_header Access-Control-Max-Age $cors_max_age;
add_header Access-Control-Allow-Methods $cors_allow_methods;
add_header Access-Control-Allow-Headers $cors_allow_headers;
{{ end }}
{{ define "proxypass" }}
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-SSL $http_x_ssl_resolved;
    proxy_set_header Host $http_host;
    proxy_redirect off;
{{ end }}

{{ define "vhostcommon" }}
    server_name {{ .name }} {{ .alias | default "" }};
    {{ if .Env.NGINX_HTTP_PROTECT_PASSWORD }}
    auth_basic            "Restricted";
    auth_basic_user_file  /etc/htpasswd-protect;
    {{ end }}
    gzip on;
    # adds a Vary: Accept-Encoding in the response, and it's a valid varying
    # info as we may not gzip depending on the value of Accept-Encoding
    gzip_vary on;
    gzip_proxied any;
    # note that text/html is always on by default
    gzip_types
        text/plain text/css text/xml text/javascript text/cache-manifest application/json
        application/x-javascript application/xml application/xml+rss application/rss+xml
        application/javascript application/atom+xml application/ld+json application/manifest+json
        application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf
        application/x-web-app-manifest+json image/svg+xml application/xhtml+xml
        application/vnd.mapbox-vector-tile font/opentype;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_comp_level 4;
    client_max_body_size {{.client_max_body_size}};
    # feed the map variables for ssl up
    set $http_x_ssl                $http_x_ssl_resolved;
    set $http_x_forwarded_proto    $http_x_forwarded_proto_resolved;
    set $http_x_forwarded_ssl      $http_x_forwarded_ssl_resolved;
    set $http_x_forwarded_protocol $http_x_forwarded_protocol_resolved;
    # set $scheme                  $forwarded_ssl_scheme;
    # proxy params headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header x-forwarded-proto $http_x_forwarded_proto_resolved;
    proxy_set_header x-forwarded-ssl $http_x_forwarded_ssl_resolved;
    proxy_set_header x-forwarded-protocol $http_x_forwarded_protocol_resolved;
    proxy_buffering off;
    proxy_http_version 1.1;
    # for multisearch vhost !
    root /var/www;
    index index.html;
{{ if has "redirect" .vhostblock }}
rewrite ^/(.*) {{.redirect}}/$1 permanent;
{{ end }}
{{ if eq .noforcessl "1"}}# {{ end }} add_header Strict-Transport-Security "max-age=31536000;includeSubDomains; preload" always; if ($forwarded_ssl_scheme != "https"){ rewrite ^(.*)$ https://$host$1 permanent; }
{{ if has "plone6sites" .vhostblock }}
    location /nagoya-plone6 {
        proxy_pass  http://p6_zopeserver_nagoya;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location /apncb-plone6 {
        proxy_pass  http://p6_zopeserver_apncb;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location /canathist-plone6 {
        proxy_pass  http://p6_zopeserver_canathist;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location /nh-plone6 {
        proxy_pass  http://p6_zopeserver_nh;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location /homenet-plone6 {
        proxy_pass  http://p6_zopeserver_homenet;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location /digit-plone6 {
        proxy_pass  http://p6_zopeserver_digit;
        {{ template "cors" }}
        include include/notimeout.conf;
    }
{{ end }}
{{ if has "commonproxypassv6" .vhostblock }}
    location / {
        proxy_pass http://{{ .upstream }};
        {{ template "proxypass" . }}
        {{ template "cors" }}
        include include/notimeout.conf;
    }
{{ end }}
{{ if has "commonproxypass" .vhostblock }}
    location /zmiroot/ {
        rewrite ^/zmiroot/(.*)$    /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/VirtualHostRoot/_vh_zmiroot/$1 break;
        proxy_pass http://{{ .upstream }};
        {{ template "proxypass" . }}
        {{ template "cors" }}
        include include/notimeout.conf;
    }
    location / {
        rewrite ^(.*)$             /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/$1 break;
        proxy_pass http://{{ .upstream }};
        {{ template "proxypass" . }}
        {{ template "cors" }}
        include include/notimeout.conf;
    }
{{ end }}
{{ end }}

{{ define "http" }}
server {
    listen 80;
    error_log  /var/log/nginx/{{.name}}-error.log  {{ .loglevel }};
    access_log /var/log/nginx/{{.name}}-access.log custom_combined if=$method_loggable;
    {{ template "vhostcommon" . }}
}
{{ end }}
{{ define "ssl" }}
server {
    listen 443 ssl;
    error_log  /var/log/nginx/ssl-{{.name}}-error.log  {{ .loglevel }};
    access_log /var/log/nginx/ssl-{{.name}}-access.log custom_combined if=$method_loggable;
    ssl_ciphers             {{ .ssl_ciphers }};
    ssl_protocols           {{ .ssl_protocols }};
    ssl_certificate         {{ .cert }};
    ssl_certificate_key     {{ .key }};
    ssl_session_cache  shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_dhparam {{ .diffie }};
    {{ template "vhostcommon" . }}
}
{{ end }}

{{ define "vhost" }}
{{ template "http" . }}
{{ template "ssl"  . }}
{{ end }}

upstream zopeserver_virtualcollections { server {{ $v.zope_address }}:28003; }
#
upstream p6_zopeserver_apncb                   { server {{ $v.zope_address }}:29030; }
upstream p6_zopeserver_canathist               { server {{ $v.zope_address }}:29020; }
upstream p6_zopeserver_digit                   { server {{ $v.zope_address }}:29380; }
upstream p6_zopeserver_homenet                 { server {{ $v.zope_address }}:42060; }
upstream p6_zopeserver_nagoya                  { server {{ $v.zope_address }}:29320; }
upstream p6_zopeserver_nh                      { server {{ $v.zope_address }}:42000; }
#
{{ template "vhost" ( $v | merge ( dict "name" "new-virtualcollections.naturalsciences.be"  "vhostblock" ( list "redirect" ) "redirect" "https://virtualcollections.naturalsciences.be"  )) }}
{{ template "vhost" ( $v | merge ( dict "name" "virtual-collections.naturalsciences.be"     "vhostblock" ( list "commonproxypass" "plone6sites" ) "upstream" "zopeserver_virtualcollections" "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "virtualcollections.naturalsciences.be"      "vhostblock" ( list "commonproxypass" "plone6sites" ) "upstream" "zopeserver_virtualcollections" "plonesite" "Plone" )) }}

{{ template "vhost" ( $v | merge ( dict "name" "homenet.naturalsciences.be"                                                                                                                                                             "upstream" "p6_zopeserver_homenet"   "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "www.naturalheritage.be"                                                      "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_nh"        "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "www.naturalheritage.be"                                                      "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_nh"        "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "naturalheritage.be"                                                          "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_nh"        "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "nagoya.naturalheritage.be"      "alias" "staging-nagoya.naturalheritage.be"  "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_nagoya"    "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "digit.naturalheritage.be"       "alias" "staging-digit.naturalheritage.be"   "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_digit"     "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "canahist.naturalheritage.be"    "alias" "canahist.naturalheritage.be"        "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_canathist" "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "canathist.naturalheritage.be"   "alias" "canathist.naturalheritage.be"       "cert" "/rbins-certs/wildcard.naturalheritage.be.pem" "key" "/rbins-certs/wildcard.naturalheritage.be.key" "upstream" "p6_zopeserver_canathist" "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "plone6.apncb.be"                "alias" "apncb.be"                           "cert" "/rbins-certs/star.apncb.be/fullchain.pem" "key" "/rbins-certs/star.apncb.be/privkey.pem"           "upstream" "p6_zopeserver_apncb"     "vhostblock" ( list "commonproxypassv6" "plone6sites" ) "plonesite" "Plone" )) }}

